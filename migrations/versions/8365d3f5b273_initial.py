"""Initial

Revision ID: 8365d3f5b273
Revises: 
Create Date: 2025-07-26 14:42:29.741639

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8365d3f5b273'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # --- 1. Создаем таблицу 'users' ---
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False), # Убираем autoincrement=False для primary key
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=60), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)

    # --- 2. Создаем таблицу 'projects' БЕЗ внешнего ключа default_role_id ---
    # Мы сохраним столбец default_role_id, но не будем создавать FK на этом этапе.
    op.create_table('projects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('creator_user_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('open', 'close', name='projectstatus'), nullable=False),
    sa.Column('created_at', sa.Date(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('default_role_id', sa.Integer(), nullable=True), # Сделаем временно nullable
    # НЕ создаем FK default_role_id здесь
    sa.ForeignKeyConstraint(['creator_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_creator_user_id'), 'projects', ['creator_user_id'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)

    # --- 3. Создаем таблицу 'roles' БЕЗ внешнего ключа project_id ---
    # Мы сохраним столбец project_id, но не будем создавать FK на этом этапе.
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False), # Столбец есть
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('create_tasks', sa.Boolean(), nullable=False),
    sa.Column('delete_tasks', sa.Boolean(), nullable=False),
    sa.Column('update_tasks', sa.Boolean(), nullable=False),
    sa.Column('update_project', sa.Boolean(), nullable=False),
    sa.Column('generate_url', sa.Boolean(), nullable=False),
    sa.Column('delete_users', sa.Boolean(), nullable=False),
    sa.Column('change_roles', sa.Boolean(), nullable=False),
    sa.Column('manage_links', sa.Boolean(), nullable=False),
    sa.CheckConstraint('priority <= 10 AND priority >= 1', name='check_priority_range'),
    # НЕ создаем FK project_id здесь
    sa.PrimaryKeyConstraint('id')
    )
    # НЕ создаем индекс ix_roles_project_id здесь

    # --- 4. Теперь, когда обе таблицы projects и roles существуют, добавляем внешние ключи ---
    # a. Добавляем внешний ключ roles.project_id -> projects.id
    op.create_foreign_key('fk_roles_project_id', 'roles', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    # b. Создаем индекс для внешнего ключа roles.project_id
    op.create_index(op.f('ix_roles_project_id'), 'roles', ['project_id'], unique=False)
    # c. Добавляем внешний ключ projects.default_role_id -> roles.id
    op.create_foreign_key('fk_projects_default_role_id', 'projects', 'roles', ['default_role_id'], ['id'], ondelete='RESTRICT')
    # d. Если default_role_id в projects должно быть NOT NULL, изменяем его
    # op.alter_column('projects', 'default_role_id', nullable=False) # Раскомментируйте, если в вашей модели оно NOT NULL

    # --- 5. Создаем остальные таблицы (они не имеют циклических зависимостей) ---
    op.create_table('tokens',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('exp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_id'), 'tokens', ['id'], unique=True)
    op.create_index(op.f('ix_tokens_token'), 'tokens', ['token'], unique=False)

    op.create_table('links',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('created_at', sa.Date(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('end_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_links_creator_id'), 'links', ['creator_id'], unique=False)
    op.create_index(op.f('ix_links_project_id'), 'links', ['project_id'], unique=False)

    # Добавлен столбец joined_at из вашего нового файла
    op.create_table('project_members',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.Date(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False), # Столбец из нового файла
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'project_id', name='_user_project_uc')
    )
    op.create_index(op.f('ix_project_members_role_id'), 'project_members', ['role_id'], unique=False)

    op.create_table('tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deadline', sa.Date(), nullable=True),
    sa.Column('completed_at', sa.Date(), nullable=True),
    sa.Column('is_ended', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('processing', 'completed', 'ended', name='taskstatus'), nullable=False),
    sa.Column('priority', sa.Enum('high', 'medium', 'low', name='taskpriority'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_name'), 'tasks', ['name'], unique=False)

    op.create_table('task_assignees',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('project_member_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_member_id'], ['project_members.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('task_id', 'project_member_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_assignees')
    op.drop_index(op.f('ix_tasks_name'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_project_members_role_id'), table_name='project_members')
    op.drop_table('project_members')
    op.drop_index(op.f('ix_links_project_id'), table_name='links')
    op.drop_index(op.f('ix_links_creator_id'), table_name='links')
    op.drop_table('links')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tokens_token'), table_name='tokens')
    op.drop_index(op.f('ix_tokens_id'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_roles_project_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_creator_user_id'), table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###
